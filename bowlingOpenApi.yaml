openapi: 3.0.1
info:
  title: Bowling Case API
  description: 'This is the API used for the Bowling case where random bowling games are generated by a SKAT server, the points for the games are calculated at front-end with an algorithm and the results are verified again with the server.'
  contact: 
    name: Michalis Gratsias
    email: michail.gratsias@ufst.dk
  version: 1.0.0
servers:
- url: http://13.74.31.101/api
tags:
- name: points
  description: How to receive random bowling games and send the calculated points to the server
paths:
  /points:
    get:
      tags:
      - points
      summary: returns a JSON list (describing a random bowling game) and a token
      description: Returns a map of status codes to quantities
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetResponse'
    post:
      tags:
      - points
      summary: sends the calcualated points of the game to the server together with the token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRequest'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
components:
  schemas:
    GetResponse:
      required:
      - token
      - points
      type: object
      properties:
        points:
          type: array
          minItems: 1
          maxItems: 11
          items:
            type: array
            minItems: 2
            maxItems: 2
            items: 
              type: integer
          example: [[6,1],[7,3],[4,0],[6,1],[8,1],[5,5],[10,0],[3,2],[3,3],[8,2],[5,0]]
        token:
          type: string
          example: "pQkml33u1TDuDTV7J2Qcrodz1WbYD9tW"
    PostRequest:
      required:
      - token
      - points
      type: object
      properties:
        token:
          type: string
          example: "pQkml33u1TDuDTV7J2Qcrodz1WbYD9tW"
        points:
          type: array
          minItems: 1
          maxItems: 11
          items:
            type: integer
          example: [7, 21, 25, 32, 41, 61, 76, 81, 87, 102]
    PostResponse:
      required:
      - success
      - input
      type: object
      properties:
        success:
          type: boolean
          example: true
        input:  
          type: array
          minItems: 1
          maxItems: 11
          items:
            type: integer
          example: [7, 21, 25, 32, 41, 61, 76, 81, 87, 102]
